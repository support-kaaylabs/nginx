#!/bin/bash

startDeploy()
{
# Create a new task definition for this build
sed -e "s;GIT_COMMIT;${IMAGE_VERSION};g" ${JSON_FILE}.json > ${JSON_FILE}-new-${BUILD_NUMBER}.json

sed -e "s;GROUP_NAME;${GIT_BRANCH};g" ${JSON_FILE}-new-${BUILD_NUMBER}.json > ${JSON_FILE}-${BUILD_NUMBER}-v1.json
sed -e "s;task_role;${TASK_ROLE};g" ${JSON_FILE}-${BUILD_NUMBER}-v1.json > ${JSON_FILE}-${BUILD_NUMBER}.json
cat ${JSON_FILE}-${BUILD_NUMBER}.json

aws ecs register-task-definition --family ${TASK_FAMILY} --cli-input-json file://${JSON_FILE}-${BUILD_NUMBER}.json --region ap-south-1 


# Jenkins Job wait until service is avaliable in cluster
aws ecs wait services-stable --cluster ${CLUSTER} --services ${SERVICE_NAME} --region ap-south-1 

if [ $? -eq 0 ]; then
echo "Build got deployed successfully"
else
echo "Build failed"
exit 1
fi
rm -rf ${JSON_FILE}-${BUILD_NUMBER}.json
}

if [ "$GIT_BRANCH" == "master" ]
then
SERVICE_NAME="nginx"
IMAGE_VERSION="${GIT_BRANCH}-${BUILD_NUMBER}"
TASK_FAMILY=
CLUSTER="nginx-cluster"
JSON_FILE=
RUNNING_COUNT=1
startDeploy
elif [ "$GIT_BRANCH" == "main" ]
then
SERVICE_NAME="nginx"
IMAGE_VERSION="${GIT_BRANCH}-${BUILD_NUMBER}"
TASK_FAMILY=
CLUSTER="nginx-cluster"
TASK_ROLE=
JSON_FILE=
RUNNING_COUNT=1
startDeploy
elif [ "$GIT_BRANCH" == "qa" ]
then
SERVICE_NAME="qa-jinglebid-admin"
IMAGE_VERSION="${GIT_BRANCH}-${BUILD_NUMBER}"
TASK_FAMILY=
CLUSTER="nginx-cluster"
TASK_ROLE=
JSON_FILE=
RUNNING_COUNT=1
startDeploy
elif [ "$GIT_BRANCH" == "main" ]
then
SERVICE_NAME="nginx"
IMAGE_VERSION="${GIT_BRANCH}-${BUILD_NUMBER}"
TASK_FAMILY=
CLUSTER="Nginx-cluster"
TASK_ROLE=
JSON_FILE="
RUNNING_COUNT=1
startDeploy
else
echo "Skipping a deployment because this branch is not permitted for docker deployment: ${GIT_BRANCH}"
fi